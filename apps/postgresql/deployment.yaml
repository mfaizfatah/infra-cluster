apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: apps
type: Opaque
data:
  # IMPORTANT: Change this password before deploying!
  # Current password is: changeme123
  # To generate new password: echo -n "yourpassword" | base64
  postgresql-password: Y2hhbmdlbWUxMjM=
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
  namespace: apps
data:
  postgresql.conf: |
    # PostgreSQL configuration optimized for 1GB RAM VPS
    shared_buffers = 32MB
    effective_cache_size = 128MB
    maintenance_work_mem = 16MB
    work_mem = 4MB
    max_connections = 20
    
    # Logging
    log_statement = 'none'
    log_min_duration_statement = 1000
    
    # Checkpoints
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    
    # Random page cost
    random_page_cost = 1.1
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pvc
  namespace: apps
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-path
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: apps
  labels:
    app: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - name: postgresql
        image: postgres:15.4-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "myapp"
        - name: POSTGRES_USER
          value: "postgres"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: postgresql-password
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: postgresql-data
          mountPath: /var/lib/postgresql/data
        - name: postgresql-config
          mountPath: /etc/postgresql/postgresql.conf
          subPath: postgresql.conf
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - pg_isready -U postgres -d myapp
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - pg_isready -U postgres -d myapp
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
          claimName: postgresql-pvc
      - name: postgresql-config
        configMap:
          name: postgresql-config
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  namespace: apps
spec:
  selector:
    app: postgresql
  ports:
  - port: 5432
    targetPort: 5432
  type: ClusterIP
